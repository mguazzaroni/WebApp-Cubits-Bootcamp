<h2>Editar Producto</h2>

<div class="row">
    <div class="col-md-4">
        <form id="productForm">
            <div class="row">
                <div class="form-group">
                    <label class="col-form-label">Nombre</label>
                    <input class="form-control" name="name" type="text" />
                </div>
                <div class="form-group">
                    <label class="form-label">Descripción</label>
                    <input class="form-control" name="description" type="text" />
                </div>
                <div class="form-group">
                    <label class="form-label">Precio</label>
                    <input class="form-control" name="price" type="text" />
                </div>
                <div class="form-group">
                    <label class="form-label">Stock</label>
                    <input class="form-control" name="stock" type="text" />
                </div>
            </div>
            <div class="button-row">
                <button type="submit" class="btn btn-success">Guardar</button>
                <a href="/products" class="btn btn-danger">Cancelar</a>
            </div>
        </form>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">serializeForm = () => {
            return JSON.stringify({
                name: getInputValue("name"),
                description: getInputValue("description"),
                price: getInputValue("price"),
                stock: getInputValue("stock"),
            });
        };

        getInputValue = (input) => {
            let value = $(`#productForm input[name=${input}]`).val();

            if (isNaN(value)) {
                return value;
            }

            return parseFloat(value);
        };

        setInputValue = (input, value) => {
            $(`#productForm input[name=${input}]`).val(value);
        };

        setFormValue = (product) => {
            setInputValue("name", product.name);
            setInputValue("description", product.description);
            setInputValue("price", product.price);
            setInputValue("stock", product.stock);
        }

        getProduct = () => {
            const id = getParameterFromUrl("id");
            const entityUrl = `/api/products/${id}`;

            $.ajax({
                method: "GET",
                url: entityUrl
            }).done((product) => {
                setFormValue(product);
            });
        }

        saveProduct = () => {
            const id = getParameterFromUrl("id");
            const entityUrl = `/api/products/${id}`;

            $.ajax({
                method: "PUT",
                url: entityUrl,
                contentType: "application/json",
                data: serializeForm(),
            }).done(() => {
                redirectToLocation("/products");
            })
        };

        handleSubmit = () => {
            $("#productForm").on("submit", (event) => {
                event.preventDefault();
                saveProduct();
            });
        }

        $(document).ready(() => {
            getProduct();
            handleSubmit();
        });</script>
}